{"version":3,"sources":["Components/Plus.js","Components/Minus.js","Components/InputNum.js","Components/Reset.js","App.js","reportWebVitals.js","index.js"],"names":["Plus","props","countUp","onClick","Minus","countDown","InputNum","state","count","handleChange","e","setState","target","value","handleSubmit","preventDefault","inputNum","onSubmit","this","type","onChange","Component","Reset","reset","App","number","parseInt","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAYeA,EAVF,SAACC,GACZ,IAAOC,EAAWD,EAAXC,QAEP,OACE,8BACE,wBAAQC,QAAWD,EAAnB,mBCKSE,EAVD,SAACH,GACX,IAAOI,EAAaJ,EAAbI,UAEP,OACI,8BACI,wBAAQF,QAAWE,EAAnB,qBCwBGC,E,4MA5BXC,MAAQ,CACJC,MAAO,I,EAGXC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVH,MAAOE,EAAEE,OAAOC,S,EAIxBC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKd,MAAMe,SAAS,EAAKT,MAAMC,OAC/B,EAAKG,SAAS,CACVH,MAAO,M,4CAIf,WACI,OACI,uBAAMS,SAAUC,KAAKJ,aAArB,UACI,uBAAOK,KAAK,OAAOC,SAAUF,KAAKT,aAAcI,MAAOK,KAAKX,MAAMC,QAClE,kE,GAvBOa,aCWRC,EAVD,SAACrB,GACX,IAAQsB,EAAUtB,EAAVsB,MAER,OACI,8BACI,wBAAQpB,QAAWoB,EAAnB,6BCkDGC,G,kNAjDbjB,MAAQ,CACNC,MAAO,G,EAGXN,QAAU,WACR,EAAKS,SACH,CAACH,MAAO,EAAKD,MAAMC,MAAQ,K,EAI/BH,UAAY,WACV,EAAKM,SACH,CAACH,MAAO,EAAKD,MAAMC,MAAQ,K,EAI/BQ,SAAW,SAACS,GACV,IAAIZ,EAAQa,SAASD,GACrB,EAAKd,SACH,CAACH,MAAO,EAAKD,MAAMC,MAAQK,K,EAI/BU,MAAQ,WACN,EAAKZ,SAAS,CACZH,MAAO,K,4CAIX,WACE,OACE,sBAAKmB,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,wDACA,6BAAKT,KAAKX,MAAMC,WAElB,sBAAKmB,UAAU,UAAf,UACE,cAAC,EAAD,CAAMzB,QAASgB,KAAKhB,UACpB,cAAC,EAAD,CAAOG,UAAWa,KAAKb,eAEzB,sBAAKsB,UAAU,YAAf,UACE,cAAC,EAAD,CAAOJ,MAAOL,KAAKK,QACnB,cAAC,EAAD,CAAUP,SAAUE,KAAKF,qB,GA3CfK,cCIHO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2f511c70.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Plus = (props) => {\r\n  const {countUp} = props\r\n\r\n  return (\r\n    <div>\r\n      <button onClick = {countUp}>Up</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Plus","import React from 'react'\r\n\r\nconst Minus = (props) => {\r\n    const {countDown} = props\r\n\r\n    return (\r\n        <div>\r\n            <button onClick = {countDown}>Down</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Minus","import React, {Component} from 'react'\r\n\r\nclass InputNum extends Component {\r\n    state = {\r\n        count: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            count: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.inputNum(this.state.count)\r\n        this.setState({\r\n            count: ''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" onChange={this.handleChange} value={this.state.count} />\r\n                <button>Enter starting number</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputNum","\r\nimport React from 'react'\r\n\r\nconst Reset = (props) => {\r\n    const { reset } = props\r\n\r\n    return (\r\n        <div>\r\n            <button onClick = {reset}>Back to zero</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset","import React, { Component } from 'react'\r\nimport Plus from './Components/Plus'\r\nimport Minus from './Components/Minus'\r\nimport InputNum from './Components/InputNum'\r\nimport Reset from './Components/Reset'\r\nimport \"./App.css\"\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    count: 0\r\n  }\r\n\r\ncountUp = () => {\r\n  this.setState(\r\n    {count: this.state.count + 1}\r\n  )\r\n}\r\n\r\ncountDown = () => {\r\n  this.setState(\r\n    {count: this.state.count - 1}\r\n  )\r\n}\r\n\r\ninputNum = (number) =>{\r\n  let value = parseInt(number)\r\n  this.setState(\r\n    {count: this.state.count + value}\r\n  )\r\n}\r\n\r\nreset = () => {\r\n  this.setState({\r\n    count: 0\r\n  })\r\n}\r\n\r\nrender() {\r\n  return(\r\n    <div className=\"App\">\r\n      <div className=\"box\">\r\n        <p>This is a React Counter</p>\r\n        <h4>{this.state.count}</h4>\r\n      </div>\r\n      <div className=\"box-two\">\r\n        <Plus countUp={this.countUp} />\r\n        <Minus countDown={this.countDown} />\r\n      </div>\r\n      <div className=\"box-three\">\r\n        <Reset reset={this.reset} />\r\n        <InputNum inputNum={this.inputNum} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default App\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}